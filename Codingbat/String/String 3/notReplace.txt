/*
Given a string, return a string where every appearance of the lowercase word "is" has been replaced with "is not". The word "is" should not be immediately preceeded or followed by a letter -- so for example the "is" in "this" does not count. (Note: Character.isLetter(char) tests if a char is a letter.)


notReplace("is test") → "is not test"
notReplace("is-is") → "is not-is not"
notReplace("This is right") → "This is not right"
*/

public String notReplace(String str) {             //ÇALIŞIYOR
  String result = "";
  int len = str.length();
  for(int i = 0; i < len; i++){
    if(i > 0 && Character.isLetter(str.charAt(i-1))
    || (i+2 < len && Character.isLetter(str.charAt(i+2)))) {
      result += str.charAt(i);
    }
    else if(str.substring(i, i+2).equals("is")) {
      result += "is not";
      i++;
    }
    else result += str.charAt(i);
  }
  return result;
}


/*
public String notReplace(String str) {          //YARIM ÇALIŞIYOR
  //is gördükten sonra " not" yazılacak isten sonra veya önce karakter gelmemesi gerekiyor.
  String isIs = "";
  String result = str;
  String substringLeft = "";
  String substringRight = "";
  
  boolean addNot = false;
  for(int i = 0 ; i < str.length()-2 ; i++) {
    isIs = str.substring(i,i+2);
    
    if(i == 0 && isIs.equals("is") && !Character.isLetter(str.charAt(i+2))) {
        addNot = true;
    }
    else if (i != 0 && isIs.equals("is") && i < str.length()-1 && !Character.isLetter(str.charAt(i+2)) && !Character.isLetter(str.charAt(i-1))){ 
       addNot = true;
    }
    else if (i == str.length()-3 && isIs.equals("is") && !Character.isLetter(str.charAt(i-1)) ) {
      addNot = true;
    }
    if(addNot) {
      substringLeft = str.substring(0,i+2);
      substringRight = str.substring(i+2);
      str = substringLeft + " not" + substringRight;
      i+=5;
      addNot=false;
    }
  }
  return str;
}
*/