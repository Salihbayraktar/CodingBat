/*
Given a string and a non-empty substring sub, compute recursively the largest substring which starts and ends with sub and return its length.

strDist("catcowcat", "cat") → 9
strDist("catcowcat", "cow") → 3
strDist("cccatcowcatxx", "cat") → 9
*/

public int strDist(String str, String sub) {
  String result = eraseLeft(eraseRight(str,sub),sub);
  return result.length();
}

private String eraseLeft(String str,String sub) {
  if(str.length() < sub.length()) return "";
  if(str.substring(0,sub.length()).equals(sub)){
    return str;
  }
  else {
    return eraseLeft(str.substring(1),sub);
  }
}

private String eraseRight(String str, String sub) {
  if(str.length() < sub.length()) return "";
  if(str.substring(str.length()-sub.length()).equals(sub)) {
    return str;
  }
  else {
    return eraseRight(str.substring(0,str.length()-1),sub);
  }
}