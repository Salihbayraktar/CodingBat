/*
Given a string that contains a single pair of parenthesis, compute recursively a new string made of only of the parenthesis and their contents, so "xyz(abc)123" yields "(abc)".


parenBit("xyz(abc)123") → "(abc)"
parenBit("x(hello)") → "(hello)"
parenBit("(xy)1") → "(xy)"
*/

public String parenBit(String str) {
  return eraseLeft(eraseRight(str));
}

private String eraseLeft(String str) {
  if(str.length() < 1) return str;
  if(str.charAt(0) == '(' ) return str;
  else return eraseLeft(str.substring(1));
}

private String eraseRight(String str) {
  if(str.length() < 1) return str;
  if(str.charAt(str.length()-1) == ')' ) return str;
  else return eraseRight(str.substring(0,str.length()-1));
}
